m4dnl	This is m4 source.
m4dnl	Process using m4 to produce 'C' language file.
m4dnl
m4dnl	If you see this line, you can ignore the next one.
/* Do not edit this file (linsys.c). It was produced from source file linsys.c,m4 */

/* 
 *	linsys.c,m4 --
 *
 *	This routine 'linsys' was adapted from code in
 *	http://www.fysik.dtu.dk/~stoltze/tools/linsys/linsys.htm
 *
 *      Called from Nap_SolveLinear in napDyad.c,m4 to implement nap function "solve_linear(A, B)"
 */

#ifndef lint
static char *rcsid="@(#) $Id: linsys.c,m4,v 1.3 2002/05/14 00:32:03 dav480 Exp $";
#endif /* not lint */

#include <stdio.h>
#include <math.h>

#include "linsys.h"

m4begin

# m4linsys(dataType)

m4define(`m4linsys', `

EXTERN int
linsys_$1(
	NapClientData       *nap_cd,
	int n,				/* # rows in a and b */
	int m,				/* # columns in b */
	m4DataTypeName($1) **a,		/* pointers to rows of main matrix (left hand side) */
	m4DataTypeName($1) **b)		/* pointers to rows of right hand side */
{
	int i, j, k;
	m4DataTypeName($1) d;

	/* reduce to upper triangular form */
	for(i = 0; i < n; i++)
	{
		/* find maximal element */
		j = i;
		for(k = i+1; k < n; k++)
			if(fabs(a[k][i]) > fabs(a[j][i]))
				j = k;

		/* swap row i and j in both a and b */
		for(k = i; k < n; k++)
		{
			d = a[i][k];
			a[i][k] = a[j][k];
			a[j][k] = d;
		}
		for(k = 0; k<m; k++)
		{
			d = b[i][k];
			b[i][k] = b[j][k];
			b[j][k] = d;
		}

		/* check if the system is singular */
		CHECK3(fabs(a[i][i]) > 0.001, "linsys: Singular matrix, column %d", i+1);


		/* elimination */
		for(j=i+1; j<n; j++)
		{
			d = a[j][i]/a[i][i];
			a[j][i] = 0.;
			for(k = i+1; k < n; k++)
				a[j][k] -= d*a[i][k];
			for(k=0; k<m; k++)
				b[j][k] -= d*b[i][k];
		}
	}

	/* normalization */

	for(i = 0; i<n; i++)
	{
		for(j = i+1; j<n; j++)
			a[i][j] /= a[i][i];
		for(j=0; j<m; j++)
			b[i][j] /= a[i][i];
		a[i][i] = 1.;
	}
	
	/* reduction from upper trigonal form to diagonal form */

	for(i=n-1; i>=0; i--)
	{
		for(j = 0; j < i; j++)
		{	
			for(k=0; k<m; k++)
				b[j][k] -= b[i][k]*a[j][i];
			a[j][i] = 0;	
		}
	}
	return TCL_OK;
}')

m4end

m4ForAllRealDataType(`m4linsys(', `)')
