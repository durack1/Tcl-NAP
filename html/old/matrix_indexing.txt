% # Indexing of matrices
% 
% # Define matrix m with coordinate variables
% nap "m = {
{6.1 1 -2 9}
{2#3 0 1.2}
}"
::NAP::46-46
% $m set coo "{10 20}" "50 .. 80 ... 10"
% $m a
::NAP::46-46  f64  MissingValue: NaN  References: 1  Unit: (NULL)
Dimension 0   Size: 2      Name: (NULL)    Coordinate-variable: ::NAP::48-48
Dimension 1   Size: 4      Name: (NULL)    Coordinate-variable: ::NAP::56-56
Value:
 6.1  1.0 -2.0  9.0
 3.0  3.0  0.0  1.2
% [nap "coordinate_variable(m, 0)"] a
::NAP::48-48  i32  MissingValue: -2147483648  References: 1  Unit: (NULL)
Dimension 0   Size: 2      Name: (NULL)    Coordinate-variable: (NULL)
Value:
10 20
% [nap "cv(m, 1)"] a; # can abbreviate 'coordinate_variable' to 'cv'
::NAP::56-56  i32  MissingValue: -2147483648  References: 1  Unit: (NULL)
Dimension 0   Size: 4      Name: (NULL)    Coordinate-variable: (NULL)
Value:
50 60 70 80
% 
% # Cross-product indexing to extract single element (scalar)
% [nap m(0,0)]
6.1
% [nap m(1,2)]
0
% [nap m(1,-1)]
1.2
% [nap "m(@20, @70)"]; # Indirect indexing via coordinate variables
0
% [nap "m(@20, @75)"]; # Interpolate -- 0.5 * (0 + 1.2)
0.6
% [nap "m(0, @75)"];   # Interpolate -- 0.5 * (-2 + 9)
3.5
% [nap "m(@15, @75)"]; # Interpolate -- 0.5 * (0.6 + 3.5)
2.05
% [nap "m(@@16, @@74)"]; # Nearest
0
%
% # Cross-product indexing to extract multiple elements
% [nap "m(0, {2 0 -1})"]
-2 6.1 9
% [nap "m({1 0}, {2 0 -1})"]
 0.0  3.0  1.2
-2.0  6.1  9.0
% [nap "m(2, 0 .. 2)"]
6.1 1 -2
% [nap "m(1,)"];
3 3 0 1.2
% [nap "m(1, -)"]; # niladic '-' means 'reverse'
1.2 0 3 3
% [nap "m(-, -)"];
 1.2  0.0  3.0  3.0
 9.0 -2.0  1.0  6.1
% 
% # Full indexing to extract single element
% [nap "m({0 0})"]
6.1
% [nap "m({1 2})"]
0
% [nap "m{1 -1}"]; # parentheses redundant
1.2
% 
% # Full indexing to form a new array from randomly selected elements of an existing array
% [nap "m({{0 0}{1 1}})"]; # diagonal elements
6.1 3
% [nap "m{{0 0}{1 2}{1 -1}}"]
6.1 0 1.2
% [nap "m({
{{1 0}{2 1}{0 0}}
{{0 0}{1 3}{0 3}}
})"]
3.0 1.0 6.1
6.1 1.2 9.0
